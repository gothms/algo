package beauty

/*
正确的二分
	在《计算机程序设计艺术》的第 3 卷《排序和查找》中说到：“尽管第一个二分查找算法于 1946 年出现
	然而第一个完全正确的二分查找算法实现直到 1962 年才出现

	实际上，变形的二分查找很难写，主要原因是太追求第一种那样完美、简洁的写法
	而对于做工程开发的人来说，代码易读懂、没 Bug，其实更重要

二分查找更适合用在“近似”查找问题：而散列表、二叉树，比较难实现
	变体一：查找第一个值等于给定值的元素
	变体二：查找最后一个值等于给定值的元素
	变体三：查找第一个大于等于给定值的元素
	变体四：查找最后一个小于等于给定值的元素

假设有 12 万条 IP 区间与归属地的对应关系，如何快速定位出一个 IP 地址的归属地呢？
	IP 地址可以转化为 32 位的整型数，按照对应的整型值的大小关系，从小到大进行排序
	变体四：查找最后一个小于等于给定值的元素

思考
	如果有序数组是一个循环有序数组，比如 4，5，6，1，2，3。针对这种情况，如何实现一个求“值等于给定值”的二分查找算法呢？
*/
