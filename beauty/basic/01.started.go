package basic

/*
为什么要学习数据结构和算法？
如何抓住重点，系统高效地学习数据结构与算法？

start
	从广义上讲，数据结构就是指一组数据的存储结构。算法就是操作数据的一组方法。
	数据结构是为算法服务的，算法要作用在特定的数据结构之上。
why
	想要通关大厂面试，千万别让数据结构和算法拖了后腿
	业务开发工程师，你真的愿意做一辈子 CRUD boy 吗？
	基础架构研发工程师，写出达到开源水平的框架才是你的目标！
		高手之间的竞争其实就在细节：
		用的算法是不是够优化，数据存取的效率是不是够高，内存是不是够节省等
	对编程还有追求？不想被行业淘汰？那就不要只会写凑合能用的代码！
		经常有人说，程序员 35 岁之后很容易陷入瓶颈，被行业淘汰，我觉得原因其实就在此
			有的人写代码的时候，从来都不考虑非功能性的需求，只是完成功能，凑合能用就好
			做事情的时候，也从来没有长远规划，只把眼前事情做好就满足了
		我曾经面试过很多大龄候选人，简历能写十几页，经历的项目有几十个
			但是细看下来，每个项目都是重复地堆砌业务逻辑而已，完全没有难度递进，看不出有能力提升
			久而久之，十年的积累可能跟一年的积累没有任何区别
			这样的人，怎么不会被行业淘汰呢？
	小结
		目的是建立时间复杂度、空间复杂度意识
		写出高质量的代码，能够设计基础架构，提升编程技能，训练逻辑思维，积攒人生经验

概念
	数据结构
		指一组数据的存储结构
	算法
		操作数据的一组方法
	关系
		数据结构和算法是相辅相成的。数据结构是为算法服务的，算法要作用在特定的数据结构之上
		数据结构是静态的，它只是组织数据的一种方式。如果不在它的基础上操作、构建算法，孤立存在的数据结构就是没用的
point
	复杂度分析
		数据结构和算法学习的精髓
		数据结构和算法解决的是如何更省、更快地存储和处理数据的问题，因此，我们就需要一个考量效率和资源消耗的方法，这就是复杂度分析方法
		数据结构和算法本身解决的是“快”和“省”的问题，即如何让代码运行得更快，如何让代码更省存储空间。所以，执行效率是算法一个非常重要的考量指标
	思维导图
		数据结构与算法之美-脑图.png
		几乎涵盖了所有数据结构和算法书籍中都会讲到的知识点
	学习数据结构和算法
		来历
		自身的特点
		适合解决的问题
		实际的应用场景
how
	边学边练，适度刷题
	多问、多思考、多互动
	打怪升级学习法
	知识需要沉淀，不要想试图一下子掌握所有
10个最常用最基础数据结构
	数组
	链表
	栈
	队列
	散列表
	二叉树
	堆
	跳表
	图
	Trie树
10个最常用最基础算法
	递归
	排序
	二分查找
	搜索
	哈希算法
	贪心算法
	分治算法
	回溯算法
	动态规划
	字符串匹配算法
*/
