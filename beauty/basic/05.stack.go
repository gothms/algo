package basic

/*
栈：如何实现浏览器的前进和后退功能？

stack
	后进者先出，先进者后出
	一种“操作受限”的线性表，只允许在一端插入和删除数据
场景
	当某个数据集合只涉及在一端插入和删除数据，并且满足后进先出、先进后出的特性
栈 vs 数组/链表
	从功能上来说，数组或链表确实可以替代栈，但特定的数据结构是对特定场景的抽象
	而且，数组或链表暴露了太多的操作接口，操作上的确灵活自由，但使用时就比较不可控，自然也就更容易出错

如何实现一个“栈”？
	顺序栈：用数组实现的栈
	链式栈：用链表实现的栈
支持动态扩容的顺序栈
	底层依赖一个支持动态扩容的数组
	当栈满了之后，就申请一个更大的数组，将原来的数据搬移到新数组中
	O(1) 入栈时间复杂度：摊还分析，将 K 个数据搬移均摊到 K 次入栈操作

栈在函数调用中的应用
	操作系统给每个线程分配了一块独立的内存空间，这块内存被组织成“栈”这种结构, 用来存储函数调用时的临时变量
	每进入一个函数，就会将临时变量作为一个栈帧入栈，当被调用函数执行完成，返回之后，将这个函数对应的栈帧出栈
栈在表达式求值中的应用
	一个保存操作数的栈，另一个是保存运算符的栈
	从左向右遍历表达式，当遇到数字，就直接压入操作数栈
	当遇到运算符，就与运算符栈的栈顶元素进行比较
		如果比运算符栈顶元素的优先级高，就将当前运算符压入栈
		如果比运算符栈顶元素的优先级低或者相同，从运算符栈中取栈顶运算符，从操作数栈的栈顶取 2 个操作数，然后进行计算
			再把计算完的结果压入操作数栈，继续比较
栈在括号匹配中的应用
	用栈来保存未匹配的左括号，从左到右依次扫描字符串
	当扫描到左括号时，则将其压入栈中
	当扫描到右括号时，从栈顶取出一个左括号
		如果能够匹配，比如“(”跟“)”匹配，“[”跟“]”匹配，“{”跟“}”匹配，则继续扫描剩下的字符串
		如果扫描的过程中，遇到不能配对的右括号，或者栈中没有数据，则说明为非法格式
	当所有的括号都扫描完成之后，如果栈为空，则说明字符串为合法格式
	否则，说明有未匹配的左括号，为非法格式
浏览器的前进、后退功能
	使用两个栈，X 和 Y，把首次浏览的页面依次压入栈 X
	当点击后退按钮时，再依次从栈 X 中出栈，并将出栈的数据依次放入栈 Y
	当点击前进按钮时，依次从栈 Y 中取出数据，放入栈 X 中
	当栈 X 中没有数据时，那就说明没有页面可以继续后退浏览了
	当栈 Y 中没有数据，那就说明没有页面可以点击前进按钮浏览了
	如果中途跳转到了一个新的页面，则清空栈 Y

思考
	用函数调用栈来保存临时变量，为什么函数调用要用“栈”来保存临时变量呢？用其他数据结构不行吗？
		不一定非要用栈来保存临时变量，只不过如果这个函数调用符合后进先出的特性，用栈这种数据结构来实现，是最顺理成章的选择
		从调用函数进入被调用函数，对于数据来说，变化的是什么呢？是作用域
		所以根本上，只要能保证每进入一个新的函数，都是一个新的作用域就可以
		而要实现这个，用栈就非常方便。在进入被调用函数的时候，分配一段栈空间给这个函数的变量，在函数结束的时候，将栈顶复位，正好回到调用函数的作用域内。
	JVM 内存管理中有个“堆栈”的概念。栈内存用来存储局部变量和方法调用，堆内存用来存储 Java 中的对象
		那 JVM 里面的“栈”跟我们这里说的“栈”是不是一回事呢？如果不是，那它为什么又叫作“栈”呢？

		内存中的堆栈和数据结构堆栈不是一个概念，可以说内存中的堆栈是真实存在的物理区，数据结构中的堆栈是抽象的数据存储结构
		...
*/
