package selective

/*
不定期福利第四期 | 刘超：我是怎么学习《数据结构与算法之美》的？
	《趣谈网络协议》专栏的作者

基础知识就像是一座大楼的地基，它决定了我们的技术高度。那技术人究竟都需要修炼哪些“内功”呢？
我觉得，无外乎就是大学里的那些基础课程，操作系统、计算机网络、编译原理等等，当然还有数据结构和算法。

面试
	1.作为面试官，在招人的时候，往往发现，使用框架速成的人很多，基础知识扎实的人少见
		而基础不扎实会影响你以后学习新技术的速度和职业发展的广度
	2.越是薪资低的企业，面试的时候，它们往往越注重你会不会做网站，甚至会要求你现场做出个东西来
		这其实是在找代码熟练工
	3.相反，越是薪资高的企业，越是重视考察基础知识。基础好，说明可塑性强，培养起来也比较快
		而最牛的公司，考的往往是算法和思路

一：基础知识
二：代码练习
	面试手写问题举例：不仅仅只是实现主要功能，大公司的面试很多情况下都会考虑边界条件
		在链表这一节，单链表反转，链表中环的检测，两个有序的链表合并，删除链表倒数第 n 个结点，求链表的中间结点等
		在栈这一节，在函数调用中的应用，在表达式求值中的应用，在括号匹配中的应用
		在排序这一节，如何在 O(n) 的时间复杂度内查找一个无序数组中的第 K 大元素？
		在二分查找这一节，二分查找的四个变体
三：海量数据的处理思路问题
	现在排名靠前的大公司，大都存在海量数据的处理问题。对于这一类问题，在面试的时候，也是经常会问到的
		由于这类问题复杂度比较高，很少让当场就写代码，但是基本上会让你说一个思路，或者写写伪代码
		想要解决海量数据的问题，你会的就不能只是基础的数据结构和算法了，你需要综合应用
		如果平时没有想过这部分问题，临时被问，肯定会懵
	经典海量数据问题
		1.比如说，我们有 10GB 的订单数据，我们希望按订单金额（假设金额都是正整数）进行排序，但是我们的内存有限，只有几百 MB，没办法一次性把 10GB 的数据都加载到内存中
			这个时候该怎么办呢？
		2.如果你所在的省有 50 万考生，如何通过成绩快速排序得出名次呢？
		3.假设我们有 10 万个手机号码，希望将这 10 万个手机号码从小到大排序，你有什么比较快速的排序方法呢？
		4.假设我们有 1000 万个整型数据，每个数据占 8 个字节，如何设计数据结构和算法，快速判断某个整数是否出现在这 1000 万数据中？
			我们希望这个功能不要占用太多的内存空间，最多不要超过 100MB，你会怎么做呢？
四：工业实践
	研究底层代码的实现，解析为什么这些在工业中大量使用的库，应该这样实现
	不但对于面试有帮助，对于实际开发也有很大的帮助。普通程序员和高手的差距，就是一个用完了就完了，一个用完了要看看为啥这样用
	举例
		Glibc 中的 qsort() 函数
		Java 中的 HashMap 如何实现工业级的散列表
		Redis 中的有序集合（Sorted Set）的实现
		工程上使用的红黑树
		哈希算法
			安全加密、数据校验、唯一标识、散列函数，负载均衡、数据分片、分布式存储等应用
			架构、微服务中，都有使用
		...

coding
	看看官方文档
	看看原理解析的书
	看看源代码
	然后映射到算法与数据结构中
*/
