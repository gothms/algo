package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "[[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]]"
	s = "[[131,1,95,208,38,257,123,204,101],[185,165,292,109,266,259,97,234,60],[55,281,38,61,204,243,32,54,164],[106,230,202,4,65,243,89,139,211],[192,246,11,294,119,43,250,161,110],[71,279,288,173,64,48,216,26,276],[23,206,152,106,288,286,270,131,12],[115,64,251,108,194,295,131,249,121]]"
	s = "[[102,168,168,86,228],[209,210,182,153,55],[99,76,168,40,262],[260,257,227,97,153],[189,280,257,239,93],[300,108,68,220,76]]"
	array := LCArray2GoArray(s)
	fmt.Println(array)
}

func LCArray2GoArray(s string) string {
	var sb strings.Builder
	for i, c := range s {
		switch c {
		case '[':
			sb.WriteByte('{')
		case ']':
			sb.WriteByte('}')
		default:
			sb.WriteRune(c)
			if c == ',' && i-1 >= 0 && s[i-1] == ']' {
				sb.WriteByte('\n')
			}
		}
	}
	return sb.String()
}
