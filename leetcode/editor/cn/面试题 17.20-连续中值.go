//ÈöèÊú∫‰∫ßÁîüÊï∞Â≠óÂπ∂‰º†ÈÄíÁªô‰∏Ä‰∏™ÊñπÊ≥ï„ÄÇ‰Ω†ËÉΩÂê¶ÂÆåÊàêËøô‰∏™ÊñπÊ≥ïÔºåÂú®ÊØèÊ¨°‰∫ßÁîüÊñ∞ÂÄºÊó∂ÔºåÂØªÊâæÂΩìÂâçÊâÄÊúâÂÄºÁöÑ‰∏≠Èó¥ÂÄºÔºà‰∏≠‰ΩçÊï∞ÔºâÂπ∂‰øùÂ≠ò„ÄÇ
//
// ‰∏≠‰ΩçÊï∞ÊòØÊúâÂ∫èÂàóË°®‰∏≠Èó¥ÁöÑÊï∞„ÄÇÂ¶ÇÊûúÂàóË°®ÈïøÂ∫¶ÊòØÂÅ∂Êï∞Ôºå‰∏≠‰ΩçÊï∞ÂàôÊòØ‰∏≠Èó¥‰∏§‰∏™Êï∞ÁöÑÂπ≥ÂùáÂÄº„ÄÇ
//
// ‰æãÂ¶ÇÔºå
//
// [2,3,4] ÁöÑ‰∏≠‰ΩçÊï∞ÊòØ 3
//
// [2,3] ÁöÑ‰∏≠‰ΩçÊï∞ÊòØ (2 + 3) / 2 = 2.5
//
// ËÆæËÆ°‰∏Ä‰∏™ÊîØÊåÅ‰ª•‰∏ã‰∏§ÁßçÊìç‰ΩúÁöÑÊï∞ÊçÆÁªìÊûÑÔºö
//
//
// void addNum(int num) - ‰ªéÊï∞ÊçÆÊµÅ‰∏≠Ê∑ªÂä†‰∏Ä‰∏™Êï¥Êï∞Âà∞Êï∞ÊçÆÁªìÊûÑ‰∏≠„ÄÇ
// double findMedian() - ËøîÂõûÁõÆÂâçÊâÄÊúâÂÖÉÁ¥†ÁöÑ‰∏≠‰ΩçÊï∞„ÄÇ
//
//
// Á§∫‰æãÔºö
//
// addNum(1)
//addNum(2)
//findMedian() -> 1.5
//addNum(3)
//findMedian() -> 2
//
//
// Related Topics ËÆæËÆ° ÂèåÊåáÈíà Êï∞ÊçÆÊµÅ ÊéíÂ∫è Â†ÜÔºà‰ºòÂÖàÈòüÂàóÔºâ üëç 37 üëé 0

package main

import (
	"container/heap"
	"sort"
)

func main() {

}

// leetcode submit region begin(Prohibit modification and deletion)
type MedianFinder struct {
	maxHp, minHp *mfHp
}
type mfHp struct {
	sort.IntSlice
}

func (m *mfHp) Push(x any) {
	m.IntSlice = append(m.IntSlice, x.(int))
}
func (m *mfHp) Pop() any {
	v := m.IntSlice[len(m.IntSlice)-1]
	m.IntSlice = m.IntSlice[:len(m.IntSlice)-1]
	return v
}
func Constructor() MedianFinder {
	return MedianFinder{&mfHp{}, &mfHp{}}
}

func (this *MedianFinder) AddNum(num int) {
	if this.minHp.Len() == 0 || num >= this.minHp.IntSlice[0] { // ‰ºòÂÖàÂ∞èÈ°∂Â†Ü
		heap.Push(this.minHp, num)
		if this.minHp.Len() > this.maxHp.Len()+1 { // Ë∞ÉÊï¥Âπ≥Ë°°
			heap.Push(this.maxHp, -heap.Pop(this.minHp).(int))
		}
	} else {
		heap.Push(this.maxHp, -num) // Â§ßÈ°∂Â†ÜÔºöÂ≠òË¥üÂÄº
		if this.maxHp.Len() > this.minHp.Len() {
			heap.Push(this.minHp, -heap.Pop(this.maxHp).(int))
		}
	}
}
func (this *MedianFinder) FindMedian() float64 {
	if this.minHp.Len() == this.maxHp.Len() { // ÂÅ∂Êï∞
		return float64(this.minHp.IntSlice[0]-this.maxHp.IntSlice[0]) / 2.0
	} else {
		return float64(this.minHp.IntSlice[0])
	}
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * obj := Constructor();
 * obj.AddNum(num);
 * param_2 := obj.FindMedian();
 */
//leetcode submit region end(Prohibit modification and deletion)
